{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Admin/Desktop/CloneReactJS/slack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"C:/Users/Admin/Desktop/CloneReactJS/slack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;import React,{useEffect,useState}from\"react\";import styled from\"styled-components\";import InfoOutlinedIcon from\"@material-ui/icons/InfoOutlined\";import ChatInput from\"./ChatInput\";import ChatMessage from\"./ChatMessage\";import db from\"../firebase\";import{useParams}from\"react-router-dom\";import firebase from\"firebase\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Chat(_ref){var user=_ref.user;var _useParams=useParams(),channelId=_useParams.channelId;var _useState=useState(),_useState2=_slicedToArray(_useState,2),channel=_useState2[0],setChannel=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var getMessages=function getMessages(){db.collection(\"rooms\").doc(channelId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(function(snapshot){var messages=snapshot.docs.map(function(doc){return doc.data();});setMessages(messages);});};var sendMessage=function sendMessage(text){if(channelId){var payload={text:text,timestamp:firebase.firestore.Timestamp.now(),user:user.name,userImage:user.photo};db.collection(\"rooms\").doc(channelId).collection(\"messages\").add(payload);}};var getChannel=function getChannel(){db.collection(\"rooms\").doc(channelId).onSnapshot(function(snapshot){setChannel(snapshot.data());});};useEffect(function(){getChannel();getMessages();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[channelId]);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsxs(Channel,{children:[/*#__PURE__*/_jsxs(ChannelName,{children:[\"# \",channel&&channel.name]}),/*#__PURE__*/_jsx(ChannelInfo,{children:\"Company-wide announcements and work-based matters\"})]}),/*#__PURE__*/_jsxs(ChannelDetails,{children:[/*#__PURE__*/_jsx(\"div\",{children:\"Details\"}),/*#__PURE__*/_jsx(Info,{})]})]}),/*#__PURE__*/_jsx(MessageContainer,{children:messages.length>0&&messages.map(function(data,index){return/*#__PURE__*/_jsx(ChatMessage,{text:data.text,name:data.user,image:data.userImage,timestamp:data.timestamp},index);})}),/*#__PURE__*/_jsx(ChatInput,{sendMessage:sendMessage})]});}export default Chat;var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-rows: 64px auto min-content;\\n  min-height: 0;\\n\"])));var Channel=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\"])));var ChannelDetails=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  color: #606060;\\n\"])));var ChannelName=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-weight: 700;\\n\"])));var ChannelInfo=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  font-weight: 400;\\n  color: #606060;\\n  font-size: 13px;\\n  margin-top: 8px;\\n\"])));var Info=styled(InfoOutlinedIcon)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  margin-left: 10px;\\n\"])));var Header=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  padding-left: 20px;\\n  padding-right: 20px;\\n  display: flex;\\n  align-items: center;\\n  border-bottom: 1px solid rgba(83, 39, 83, 0.13);\\n  justify-content: space-between;\\n\"])));var MessageContainer=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: scroll;\\n\"])));","map":{"version":3,"sources":["C:/Users/Admin/Desktop/CloneReactJS/slack/src/components/Chat.js"],"names":["React","useEffect","useState","styled","InfoOutlinedIcon","ChatInput","ChatMessage","db","useParams","firebase","Chat","user","channelId","channel","setChannel","messages","setMessages","getMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","sendMessage","text","payload","timestamp","firestore","Timestamp","now","name","userImage","photo","add","getChannel","length","index","Container","div","Channel","ChannelDetails","ChannelName","ChannelInfo","Info","Header","MessageContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport db from \"../firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat({ user }) {\r\n  let { channelId } = useParams();\r\n  const [channel, setChannel] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const getMessages = () => {\r\n    db.collection(\"rooms\")\r\n      .doc(channelId)\r\n      .collection(\"messages\")\r\n      .orderBy(\"timestamp\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        let messages = snapshot.docs.map((doc) => doc.data());\r\n        setMessages(messages);\r\n      });\r\n  };\r\n\r\n  const sendMessage = (text) => {\r\n    if (channelId) {\r\n      let payload = {\r\n        text: text,\r\n        timestamp: firebase.firestore.Timestamp.now(),\r\n        user: user.name,\r\n        userImage: user.photo,\r\n      };\r\n      db.collection(\"rooms\").doc(channelId).collection(\"messages\").add(payload);\r\n    }\r\n  };\r\n\r\n  const getChannel = () => {\r\n    db.collection(\"rooms\")\r\n      .doc(channelId)\r\n      .onSnapshot((snapshot) => {\r\n        setChannel(snapshot.data());\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChannel();\r\n    getMessages();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [channelId]);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Channel>\r\n          <ChannelName># {channel && channel.name}</ChannelName>\r\n          <ChannelInfo>\r\n            Company-wide announcements and work-based matters\r\n          </ChannelInfo>\r\n        </Channel>\r\n        <ChannelDetails>\r\n          <div>Details</div>\r\n          <Info />\r\n        </ChannelDetails>\r\n      </Header>\r\n      <MessageContainer>\r\n        {messages.length > 0 &&\r\n          messages.map((data, index) => (\r\n            <ChatMessage\r\n            key={index}\r\n              text={data.text}\r\n              name={data.user}\r\n              image={data.userImage}\r\n              timestamp={data.timestamp}\r\n            />\r\n          ))}\r\n      </MessageContainer>\r\n      <ChatInput sendMessage={sendMessage} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 64px auto min-content;\r\n  min-height: 0;\r\n`;\r\n\r\nconst Channel = styled.div``;\r\n\r\nconst ChannelDetails = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: #606060;\r\n`;\r\n\r\nconst ChannelName = styled.div`\r\n  font-weight: 700;\r\n`;\r\n\r\nconst ChannelInfo = styled.div`\r\n  font-weight: 400;\r\n  color: #606060;\r\n  font-size: 13px;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst Info = styled(InfoOutlinedIcon)`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(83, 39, 83, 0.13);\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: scroll;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}