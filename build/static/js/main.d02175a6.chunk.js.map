{"version":3,"sources":["components/ChatInput.js","components/ChatMessage.js","firebase.js","components/Chat.js","components/Login.js","components/Header.js","data/SidebarData.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["ChatInput","sendMessage","useState","input","setInput","Container","InputContainer","onChange","e","target","value","type","placeholder","SendButton","onClick","preventDefault","styled","div","button","Send","SendIcon","ChatMessage","text","name","image","timestamp","UserAvatar","alt","src","MessageContent","Name","Date","toDate","toUTCString","Text","span","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Chat","user","channelId","useParams","channel","setChannel","messages","setMessages","useEffect","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","Header","Channel","ChannelName","ChannelInfo","ChannelDetails","Info","MessageContainer","length","index","userImage","payload","Timestamp","now","photo","add","InfoOutlinedIcon","Login","props","Content","SlackImg","SignInButton","signInWithPopup","then","result","newUser","displayName","photoURL","localStorage","setItem","JSON","stringify","setUser","catch","error","alert","message","img","signOut","Main","SearchContainer","Search","UserContainer","UserImage","sidebarItemsData","id","icon","Sidebar","history","useHistory","WorkspaceContainer","NewMessage","MainChannels","item","MainChannelItem","ChannelsContainer","NewChannelContainer","promptName","prompt","ChannelsList","rooms","push","App","setRooms","parse","getItem","className","removeItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAqCeA,I,UAAAA,EAjCf,YAAqC,IAAhBC,EAAe,EAAfA,YAAe,EAENC,mBAAS,IAFH,mBAEzBC,EAFyB,KAElBC,EAFkB,KAahC,OACI,cAACC,EAAD,UACI,cAACC,EAAD,UACI,iCACI,uBACIC,SAAU,SAACC,GAAD,OAAKJ,EAASI,EAAEC,OAAOC,QACjCC,KAAK,OACLD,MAAOP,EACPS,YAAY,oBAChB,cAACC,EAAD,CACIF,KAAK,SACLG,QAnBP,SAACN,GACVA,EAAEO,iBACEZ,IACJF,EAAYE,GACZC,EAAS,MAaG,SAGI,cAAC,EAAD,cAUlBC,EAAYW,IAAOC,IAAV,0GAMTX,EAAiBU,IAAOC,IAAV,iYAsBdJ,EAAaG,IAAOE,OAAV,8WAsBVC,EAAOH,YAAOI,IAAPJ,CAAH,iDCnEKK,I,gBAAAA,EAnBf,YAAwD,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,UACtC,OACI,eAAC,EAAD,WACI,cAACC,EAAD,UACI,qBAAKC,IAAI,MAAMC,IAAKJ,MAExB,eAACK,EAAD,WACI,eAACC,EAAD,WACKP,EACD,+BAAO,IAAIQ,KAAKN,EAAUO,UAAUC,mBAExC,cAACC,EAAD,UACKZ,WASfjB,EAAYW,IAAOC,IAAV,kGAMTS,EAAaV,IAAOC,IAAV,mLAYVY,EAAiBb,IAAOC,IAAV,6EAKda,EAAOd,IAAOmB,KAAV,kOAYJD,EAAOlB,IAAOmB,KAAV,0B,QC/CFC,EADcC,IAASC,cATR,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAIcC,YAEjBC,EAAOT,IAASS,OAChBC,EAAW,IAAIV,IAASS,KAAKE,mBAGpBZ,ICgEFa,I,QAAAA,GAzEf,YAAyB,IAATC,EAAQ,EAARA,KACRC,EAAcC,cAAdD,UADgB,EAEQjD,qBAFR,mBAEfmD,EAFe,KAENC,EAFM,OAGUpD,mBAAS,IAHnB,mBAGfqD,EAHe,KAGLC,EAHK,KA0CtB,OANAC,qBAAU,WAPRrB,EAAGsB,WAAW,SACXC,IAAIR,GACJS,YAAW,SAACC,GACXP,EAAWO,EAASC,WA1BxB1B,EAAGsB,WAAW,SACXC,IAAIR,GACJO,WAAW,YACXK,QAAQ,YAAa,OACrBH,YAAW,SAACC,GACX,IAAIN,EAAWM,EAASG,KAAKC,KAAI,SAACN,GAAD,OAASA,EAAIG,UAC9CN,EAAYD,QA4Bf,CAACJ,IAGF,eAAC,GAAD,WACE,eAACe,GAAD,WACE,eAACC,GAAD,WACE,eAACC,GAAD,gBAAgBf,GAAWA,EAAQ9B,QACnC,cAAC8C,GAAD,mEAIF,eAACC,GAAD,WACE,0CACA,cAACC,GAAD,UAGJ,cAACC,GAAD,UACGjB,EAASkB,OAAS,GACjBlB,EAASU,KAAI,SAACH,EAAMY,GAAP,OACX,cAAC,EAAD,CAEEpD,KAAMwC,EAAKxC,KACXC,KAAMuC,EAAKZ,KACX1B,MAAOsC,EAAKa,UACZlD,UAAWqC,EAAKrC,WAJbiD,QAQX,cAAC,EAAD,CAAWzE,YApDK,SAACqB,GACnB,GAAI6B,EAAW,CACb,IAAIyB,EAAU,CACZtD,KAAMA,EACNG,UAAWY,IAASQ,UAAUgC,UAAUC,MACxC5B,KAAMA,EAAK3B,KACXoD,UAAWzB,EAAK6B,OAElB3C,EAAGsB,WAAW,SAASC,IAAIR,GAAWO,WAAW,YAAYsB,IAAIJ,WAmDjEvE,GAAYW,IAAOC,IAAV,8GAMTkD,GAAUnD,IAAOC,IAAV,0BAEPqD,GAAiBtD,IAAOC,IAAV,yFAMdmD,GAAcpD,IAAOC,IAAV,iDAIXoD,GAAcrD,IAAOC,IAAV,4GAOXsD,GAAOvD,YAAOiE,IAAPjE,CAAH,kDAIJkD,GAASlD,IAAOC,IAAV,4MASNuD,GAAmBxD,IAAOC,IAAV,gGCxFPiE,I,qBAAAA,GA9Bf,SAAeC,GAiBX,OACI,cAAC,GAAD,UACI,eAACC,GAAD,WACI,cAACC,GAAD,CAAUzD,IAAI,mEACd,+CACA,cAAC0D,GAAD,CAAcxE,QAAS,WAnB/BgC,EAAKyC,gBAAgBxC,GACpByC,MAAK,SAACC,GACH,IAAMC,EAAU,CACZnE,KAAMkE,EAAOvC,KAAKyC,YAClBZ,MAAOU,EAAOvC,KAAK0C,UAEvBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,IAC5CP,EAAMc,QAAQP,MAEjBQ,OAAM,SAACC,GACJC,MAAMD,EAAME,aASR,uCAWVhG,GAAYW,IAAOC,IAAV,gLAUTmE,GAAUpE,IAAOC,IAAV,oRAWPoE,GAAWrE,IAAOsF,IAAV,oDAMRhB,GAAetE,IAAOE,OAAV,iN,wCClCHgD,I,8BAAAA,GAzBf,YAAoC,IAAlBhB,EAAiB,EAAjBA,KAAMqD,EAAW,EAAXA,QACpB,OACI,eAAC,GAAD,WACI,eAACC,GAAD,WACI,cAAC,KAAD,IACA,cAACC,GAAD,UACI,cAACC,GAAD,UACI,uBAAO/F,KAAK,OAAOC,YAAY,kBAGvC,cAAC,KAAD,OAGJ,eAAC+F,GAAD,WACI,cAAC,GAAD,UACKzD,EAAK3B,OAEV,cAACqF,GAAD,CAAW9F,QAASyF,EAApB,SACI,qBAAK5E,IAAI,KAAKC,IAAKsB,EAAK6B,MAAQ7B,EAAK6B,MAAQ,6CAU3D1E,GAAYW,IAAOC,IAAV,mOAUTuF,GAAOxF,IAAOC,IAAV,kGAMJwF,GAAkBzF,IAAOC,IAAV,sGAMfyF,GAAS1F,IAAOC,IAAV,+bAwBN0F,GAAgB3F,IAAOC,IAAV,8IAQba,GAAOd,IAAOC,IAAV,wDAIJ2F,GAAY5F,IAAOC,IAAV,0L,4ICrFF4F,GAAmB,CAC9B,CACEC,GAAG,EACHC,KAAM,cAAC,KAAD,IACNzF,KAAM,UAER,CACEwF,GAAG,EACHC,KAAM,cAAC,KAAD,IACNzF,KAAM,WAER,CACEwF,GAAG,EACHC,KAAM,cAAC,KAAD,IACNzF,KAAM,wBAER,CACEwF,GAAG,EACHC,KAAM,cAAC,KAAD,IACNzF,KAAM,cAER,CACEwF,GAAG,EACHC,KAAM,cAAC,KAAD,IACNzF,KAAM,oBAER,CACEwF,GAAG,EACHC,KAAM,cAAC,KAAD,IACNzF,KAAM,S,oBCoCK0F,I,MAAAA,GA/Df,SAAiB7B,GAEb,IAAM8B,EAAUC,cAmBhB,OACI,eAAC,GAAD,WACI,eAACC,GAAD,WACI,cAAC,GAAD,mCAGA,cAACC,GAAD,UACI,cAAC,KAAD,SAGR,cAACC,GAAD,UAEQR,GAAiB5C,KAAI,SAAAqD,GAAI,OACrB,eAACC,GAAD,WACKD,EAAKP,KACLO,EAAKhG,OAFYgG,EAAKR,SAOvC,eAACU,GAAD,WACI,eAACC,GAAD,WACI,2CAGA,cAAC,KAAD,CAAS3G,QAlCN,WACf,IAAM4G,EAAaC,OAAO,sBACvBD,GACCtF,EAAGsB,WAAW,SAASsB,IAAI,CACvBzD,KAAMmG,UAgCN,cAACE,GAAD,UAEQzC,EAAM0C,MAAM5D,KAAI,SAAAqD,GAAI,OAChB,eAAC,GAAD,CAAuBxG,QAAS,WA9CpC,IAACgG,KA8CmDQ,EAAKR,KA5CrEG,EAAQa,KAAR,gBAAsBhB,KA4CN,eACOQ,EAAK/F,OADE+F,EAAKR,gBAezCzG,GAAYW,IAAOC,IAAV,0DAKTkG,GAAqBnG,IAAOC,IAAV,wNAUlBa,GAAOd,IAAOC,IAAV,4BAEJmG,GAAapG,IAAOC,IAAV,wRAcVoG,GAAerG,IAAOC,IAAV,sDAIZsG,GAAkBvG,IAAOC,IAAV,qQAafuG,GAAoBxG,IAAOC,IAAV,mFAKjBwG,GAAsBzG,IAAOC,IAAV,uLASnB2G,GAAe5G,IAAOC,IAAV,4BAEZkD,GAAUnD,IAAOC,IAAV,iMCxEE8G,OArDf,WAAgB,IAAD,EAEa7H,mBAAS,IAFtB,mBAEN2H,EAFM,KAECG,EAFD,OAGa9H,mBAAS6F,KAAKkC,MAAMpC,aAAaqC,QAAQ,UAHtD,mBAGLhF,EAHK,KAGC+C,EAHD,KA0Bb,OALAxC,qBAAU,WAfRrB,EAAGsB,WAAW,SAASE,YAAW,SAACC,GACjCmE,EAASnE,EAASG,KAAKC,KAAI,SAACN,GAC1B,MAAO,CAAEmD,GAAInD,EAAImD,GAAIvF,KAAMoC,EAAIG,OAAOvC,eAezC,IAID,qBAAK4G,UAAU,MAAf,SACE,cAAC,IAAD,UAEKjF,EAGD,eAAC,GAAD,WACE,cAAC,GAAD,CAAQqD,QApBF,WACdzD,EAAKyD,UAAUf,MAAK,WAClBK,aAAauC,WAAW,QACxBnC,EAAQ,UAiBwB/C,KAAMA,IAChC,eAAC,GAAD,WACE,cAAC,GAAD,CAAU2E,MAAOA,IACjB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,KAAK,mBAAZ,SACE,cAAC,GAAD,CAAMnF,KAAMA,MAEd,cAAC,IAAD,CAAOmF,KAAK,IAAZ,+CAVN,cAAC,GAAD,CAAOpC,QAASA,SAwBpB5F,GAAYW,IAAOC,IAAV,8HAOTuF,GAAOxF,IAAOC,IAAV,sFC/DKqH,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.d02175a6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nfunction ChatInput({ sendMessage }) {\r\n\r\n    const [input, setInput] = useState(\"\");\r\n\r\n\r\n    const send = (e) => {\r\n        e.preventDefault();\r\n        if(!input) return;\r\n        sendMessage(input)\r\n        setInput(\"\")\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <InputContainer>\r\n                <form>\r\n                    <input \r\n                        onChange={(e)=>setInput(e.target.value)}\r\n                        type=\"text\" \r\n                        value={input}\r\n                        placeholder=\"Message here...\" />\r\n                    <SendButton \r\n                        type=\"submit\"\r\n                        onClick={send}>\r\n                        <Send />\r\n                    </SendButton>\r\n                </form>\r\n            </InputContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n\r\nconst Container = styled.div`\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    padding-bottom: 24px;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n    border: 1px solid #8D8D8E;\r\n    border-radius: 4px;\r\n\r\n    form {\r\n        display: flex;\r\n        height: 42px;\r\n        align-items: center;\r\n        padding-left: 10px;\r\n        input {\r\n            flex: 1;\r\n            border: none;\r\n            font-size: 13px;\r\n        }\r\n\r\n        input:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n\r\n`\r\n\r\nconst SendButton = styled.button`\r\n    background: #007a5a;\r\n    border-radius: 2px;\r\n    width: 32px;\r\n    height: 32px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: 5px;\r\n    cursor: pointer;\r\n    border: none;\r\n\r\n    .MuiSvgIcon-root {\r\n        width: 18px;\r\n    }\r\n\r\n    :hover {\r\n        background: #148567\r\n    }\r\n\r\n`\r\n\r\nconst Send = styled(SendIcon)`\r\n    color: #D9D9D9;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction ChatMessage({ text, name, image, timestamp }) {\r\n    return (\r\n        <Container>\r\n            <UserAvatar>\r\n                <img alt=\"avt\" src={image} />\r\n            </UserAvatar>\r\n            <MessageContent>\r\n                <Name>\r\n                    {name}\r\n                    <span>{new Date(timestamp.toDate()).toUTCString()}</span>\r\n                </Name>\r\n                <Text>\r\n                    {text}\r\n                </Text>\r\n            </MessageContent>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChatMessage\r\n\r\nconst Container = styled.div`\r\n    padding: 8px 20px;\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nconst UserAvatar = styled.div`\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 2px;\r\n    overflow: hidden;\r\n    margin-right: 8px;\r\n\r\n    img {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst MessageContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Name = styled.span`\r\n    font-weight: 900;\r\n    font-size: 15px;\r\n    line-height: 1.4;\r\n    span {\r\n        margin-left: 8px;\r\n        font-weight: 400;\r\n        color: rgb(97,96,97);\r\n        font-size: 13px;\r\n    }\r\n`\r\n\r\nconst Text = styled.span``\r\n","import firebase from \"firebase\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD6V1xLlWwHlUrD04-S7pOfyguPghg433o\",\r\n    authDomain: \"slack-huynhdung.firebaseapp.com\",\r\n    projectId: \"slack-huynhdung\",\r\n    storageBucket: \"slack-huynhdung.appspot.com\",\r\n    messagingSenderId: \"638341913187\",\r\n    appId: \"1:638341913187:web:0b379b89bc93d0b3ca3656\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider()\r\n\r\n  export {auth, provider}\r\n  export default db;\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport db from \"../firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat({ user }) {\r\n  let { channelId } = useParams();\r\n  const [channel, setChannel] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const getMessages = () => {\r\n    db.collection(\"rooms\")\r\n      .doc(channelId)\r\n      .collection(\"messages\")\r\n      .orderBy(\"timestamp\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        let messages = snapshot.docs.map((doc) => doc.data());\r\n        setMessages(messages);\r\n      });\r\n  };\r\n\r\n  const sendMessage = (text) => {\r\n    if (channelId) {\r\n      let payload = {\r\n        text: text,\r\n        timestamp: firebase.firestore.Timestamp.now(),\r\n        user: user.name,\r\n        userImage: user.photo,\r\n      };\r\n      db.collection(\"rooms\").doc(channelId).collection(\"messages\").add(payload);\r\n    }\r\n  };\r\n\r\n  const getChannel = () => {\r\n    db.collection(\"rooms\")\r\n      .doc(channelId)\r\n      .onSnapshot((snapshot) => {\r\n        setChannel(snapshot.data());\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChannel();\r\n    getMessages();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [channelId]);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Channel>\r\n          <ChannelName># {channel && channel.name}</ChannelName>\r\n          <ChannelInfo>\r\n            Company-wide announcements and work-based matters\r\n          </ChannelInfo>\r\n        </Channel>\r\n        <ChannelDetails>\r\n          <div>Details</div>\r\n          <Info />\r\n        </ChannelDetails>\r\n      </Header>\r\n      <MessageContainer>\r\n        {messages.length > 0 &&\r\n          messages.map((data, index) => (\r\n            <ChatMessage\r\n            key={index}\r\n              text={data.text}\r\n              name={data.user}\r\n              image={data.userImage}\r\n              timestamp={data.timestamp}\r\n            />\r\n          ))}\r\n      </MessageContainer>\r\n      <ChatInput sendMessage={sendMessage} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 64px auto min-content;\r\n  min-height: 0;\r\n`;\r\n\r\nconst Channel = styled.div``;\r\n\r\nconst ChannelDetails = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: #606060;\r\n`;\r\n\r\nconst ChannelName = styled.div`\r\n  font-weight: 700;\r\n`;\r\n\r\nconst ChannelInfo = styled.div`\r\n  font-weight: 400;\r\n  color: #606060;\r\n  font-size: 13px;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst Info = styled(InfoOutlinedIcon)`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(83, 39, 83, 0.13);\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: scroll;\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { auth, provider } from '../firebase'\r\n\r\nfunction Login(props) {\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then((result)=>{\r\n            const newUser = {\r\n                name: result.user.displayName,\r\n                photo: result.user.photoURL,\r\n            }\r\n            localStorage.setItem('user', JSON.stringify(newUser));\r\n            props.setUser(newUser);\r\n        })\r\n        .catch((error)=>{\r\n            alert(error.message)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Content>\r\n                <SlackImg src=\"http://assets.stickpng.com/images/5cb480cd5f1b6d3fbadece79.png\" />\r\n                <h1>Sign in Slack</h1>\r\n                <SignInButton onClick={()=>signIn()}>\r\n                    Sign In With Google\r\n                </SignInButton>\r\n            </Content>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: #f8f8f8;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n`\r\n\r\nconst Content = styled.div`\r\n    background: white;\r\n    padding: 100px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 1px 3px rgb(0 0 0 / 12%), 0 1px 2px rgb(0 0 0 / 24%);\r\n`\r\n\r\nconst SlackImg = styled.img`\r\n\r\n    height: 100px;\r\n\r\n`\r\n\r\nconst SignInButton = styled.button`\r\n    margin-top: 50px;\r\n    background-color: #0a8d48;\r\n    color: white;\r\n    border: none;\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-size: 15px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nfunction Header({ user, signOut }) {\r\n    return (\r\n        <Container>\r\n            <Main>\r\n                <AccessTimeIcon />\r\n                <SearchContainer>\r\n                    <Search>\r\n                        <input type=\"text\" placeholder=\"Search...\" />\r\n                    </Search>\r\n                </SearchContainer>\r\n                <HelpOutlineIcon />\r\n\r\n            </Main>\r\n            <UserContainer>\r\n                <Name>\r\n                    {user.name}\r\n                </Name>\r\n                <UserImage onClick={signOut} >\r\n                    <img alt=\"ui\" src={user.photo ? user.photo : \"https://i.imgur.com/6VBx3io.png\" } />\r\n                </UserImage>\r\n            </UserContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\nconst Container = styled.div`\r\n    background: #350d36;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    box-shadow: 0 1px 0 0 rgb(255 255 255 / 10%);\r\n`\r\n\r\nconst Main = styled.div`\r\n    display: flex;\r\n    margin-right: 16px;\r\n    margin-left 16px;\r\n`\r\n\r\nconst SearchContainer = styled.div`\r\n    min-width: 400px;\r\n    margin-left: 16px;\r\n    margin-right: 16px;\r\n`\r\n\r\nconst Search = styled.div`\r\n    box-shadow: inset 0 0 0 1px rgb(104 74 104);\r\n    width: 100%;\r\n    border-radius: 6px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    input {\r\n        background-color: transparent;\r\n        border: none;\r\n        padding-left: 8px;\r\n        padding-right: 8px;\r\n        color: white;\r\n        padding-top: 4px;\r\n        padding-bottom: 4px;\r\n    }\r\n\r\n    input:focus {\r\n        outline: none;\r\n    }\r\n\r\n\r\n`\r\n\r\nconst UserContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-right: 16px;\r\n    position: absolute;\r\n    right: 0;\r\n`\r\n\r\nconst Name = styled.div`\r\n    padding-right: 16px;\r\n`\r\n\r\nconst UserImage = styled.div`\r\n    width: 28px;\r\n    height: 28px;\r\n    border: 2px solid white;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n\r\n    img {\r\n        width: 100%;\r\n    }\r\n`\r\n","import MessageIcon from \"@material-ui/icons/Message\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nexport const sidebarItemsData = [\r\n  {\r\n    id:1,\r\n    icon: <MessageIcon />,\r\n    text: \"Thread\",\r\n  },\r\n  {\r\n    id:2,\r\n    icon: <InboxIcon />,\r\n    text: \"All DMs\",\r\n  },\r\n  {\r\n    id:3,\r\n    icon: <DraftsIcon />,\r\n    text: \"Mentions & Reactions\",\r\n  },\r\n  {\r\n    id:4,\r\n    icon: <BookmarkBorderIcon />,\r\n    text: \"Save Items\",\r\n  },\r\n  {\r\n    id:5,\r\n    icon: <PeopleIcon />,\r\n    text: \"Peoples & Groups\",\r\n  },\r\n  {\r\n    id:6,\r\n    icon: <AppsIcon />,\r\n    text: \"More\",\r\n  },\r\n];\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { sidebarItemsData } from '../data/SidebarData'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport db from '../firebase'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Sidebar(props) {\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const goToChannel = (id) => {\r\n        if(id){\r\n            history.push(`/room/${id}`)\r\n        }\r\n    }\r\n\r\n\r\n    const addChannel = () => {\r\n        const promptName = prompt(\"Enter channel name\");\r\n        if(promptName){\r\n            db.collection('rooms').add({\r\n                name: promptName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <WorkspaceContainer>\r\n                <Name>\r\n                    Huỳnh Dũng\r\n                </Name>\r\n                <NewMessage>\r\n                    <AddCircleOutlineIcon />\r\n                </NewMessage>\r\n            </WorkspaceContainer>\r\n            <MainChannels>\r\n                {\r\n                    sidebarItemsData.map(item => (\r\n                        <MainChannelItem key={item.id}>\r\n                            {item.icon}\r\n                            {item.text}\r\n                        </MainChannelItem>\r\n                    ))\r\n                }\r\n            </MainChannels>\r\n            <ChannelsContainer>\r\n                <NewChannelContainer>\r\n                    <div>\r\n                        Channels\r\n                    </div>\r\n                    <AddIcon onClick={addChannel} />\r\n                </NewChannelContainer>\r\n                <ChannelsList>\r\n                    {\r\n                        props.rooms.map(item => (\r\n                            <Channel key={item.id} onClick={()=>goToChannel(item.id)}>\r\n                                # {item.name}\r\n                            </Channel>\r\n                        ))\r\n                    }\r\n                </ChannelsList>\r\n            </ChannelsContainer>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n\r\nconst Container = styled.div`\r\n    background: #3F0E40;\r\n\r\n`\r\n\r\nconst WorkspaceContainer = styled.div`\r\n    color: white;\r\n    height: 64px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 19px;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid  #532753;\r\n`\r\n\r\nconst Name = styled.div``\r\n\r\nconst NewMessage = styled.div`\r\n    width: 36px;\r\n    height: 36px;\r\n    background: white;\r\n    color: #3F0E40;\r\n    fill: #3F0E40;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n`\r\n\r\nconst MainChannels = styled.div`\r\n    padding-top: 20px;\r\n`\r\n\r\nconst MainChannelItem = styled.div`\r\n    color: rgb(188,171,188);\r\n    display: grid;\r\n    grid-template-columns: 15% auto;\r\n    height: 28px;\r\n    align-items: center;\r\n    padding-left: 19px;\r\n    cursor: pointer;\r\n    :hover {\r\n        background: #350D36;\r\n    }\r\n`\r\n\r\nconst ChannelsContainer = styled.div`\r\n    color: rgb(188,171,188);\r\n    margin-top: 10px;\r\n`\r\n\r\nconst NewChannelContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 28px;\r\n    padding-left: 19px;\r\n    padding-right: 12px;\r\n`\r\n\r\nconst ChannelsList = styled.div``\r\n\r\nconst Channel = styled.div`\r\n    height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 19px;\r\n    cursor: pointer;\r\n    :hover {\r\n        background: #350D36;\r\n    }\r\n`\r\n","\nimport './App.css';\nimport { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Chat from './components/Chat'\nimport Login from './components/Login'\nimport styled from 'styled-components'\nimport Header from './components/Header'\nimport Sidebar from './components/Sidebar'\nimport db from './firebase'\nimport { auth, provider } from \"./firebase\";\n\n\nfunction App() {\n\n  const [rooms, setRooms] = useState([]) \n  const [ user, setUser ] = useState(JSON.parse(localStorage.getItem('user'))); \n\n  const getChannels = () => {\n    db.collection('rooms').onSnapshot((snapshot) => {\n      setRooms(snapshot.docs.map((doc) => {\n        return { id: doc.id, name: doc.data().name }\n      }))\n    })\n\n  }\n\n  const signOut = () => {\n    auth.signOut().then(()=>{\n      localStorage.removeItem('user');\n      setUser(null);\n    })\n  }\n\n  useEffect(() =>{\n    getChannels();\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {\n          !user ?\n          <Login setUser={setUser}/>\n          :\n          <Container>\n            <Header signOut={signOut} user={user} />\n            <Main>\n              <Sidebar  rooms={rooms}  /> \n              <Switch>\n                <Route path=\"/room/:channelId\">\n                  <Chat user={user} />\n                </Route>\n                <Route path=\"/\">\n                  Select or Create Channel\n                </Route>\n              </Switch>\n            </Main>\n          </Container>\n        }\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: grid;\n  grid-template-rows: 38px minmax(0, 1fr);\n`\n\nconst Main = styled.div`\n  display: grid;\n  grid-template-columns: 260px auto;\n`\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}